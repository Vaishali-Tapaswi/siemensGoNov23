Lab5 - http get request
            package main
            import (
            	"fmt"
            	"os"
            	"net/http"
            	"io"
            )
            func main(){
            	str :="https://reqres.in/api/users/" + os.Args[1]
            	fmt.Println("URL = " , str)
            	resp, err := http.Get(str)
            	fmt.Println("Resp = ", resp, ", Error = " , err)
            	if err != nil {
            		fmt.Println("Error ", err)
            	} else{
            		defer resp.Body.Close()
            		body, err := io.ReadAll(resp.Body)
            		fmt.Println("Body = ", string(body), ", Error = " , err)
            	}
            }
Lab4 - library
      create a new folder demo4
      create Lab1.go
            package main
            import (
            	"fmt"
            	//"properties"
            	"github.com/magiconair/properties"
            )
            func main(){
            		// init from a file
            		p := properties.MustLoadFile("demo.properties", properties.UTF8)
            		host := p.MustGetString("host")
            		port := p.GetInt("port", 8080)
            		fmt.Println("Host = " , host )
            		fmt.Println("Port = " , port )
            
            }
      cmd>go run Lab1.go
                  // error
      cmd>go mod init nameofmod
                  // observe go.mod file created
      cmd>go run Lab1.go
            // error
      cmd>go mod tidy
            // observe go.sum file created and gopath folder to have downloaded libraries
      cmd>go run Lab1.go or go run .
            // error -> demo.prop not found
      create demo.properties
            host=localhost
            port=9094
      run 
      delete folders from gopath and rerun 

Lab3 - cap vs len
      package main
      import "fmt"
      func main(){
      	//slice := make(type)
      	slice1 := make([]string,5)
      	
      	fmt.Println("Slice1 Length  = " , len(slice1), " capacity = ", cap(slice1))
      	fmt.Println (slice1)
      	slice1[0] = "aaa"
      	slice1[1] = "bbb"
      	slice1[2] = "ccc"
      	slice1[3] = "ddd"
      	slice1[4] = "eee"
      	fmt.Println("Slice1 Length  = " , len(slice1), " capacity = ", cap(slice1))
      	fmt.Println (slice1)
      
      	slice1 = append(slice1,"fff")
      	fmt.Println("Slice1 Length  = " , len(slice1), " capacity = ", cap(slice1))
      	fmt.Println (slice1)
      	slice1 = append(slice1,"a")
      	slice1 = append(slice1,"b")
      	slice1 = append(slice1,"c")
      	slice1 = append(slice1,"d")
      	fmt.Println("Slice1 Length  = " , len(slice1), " capacity = ", cap(slice1))
      	fmt.Println (slice1)
      	slice1 = append(slice1,"11")
      	fmt.Println("Slice1 Length  = " , len(slice1), " capacity = ", cap(slice1))
      	fmt.Println (slice1)
      	for i, v := range slice1 {
      		fmt.Printf("%d = %s\n", i, v)
      	}
      
      }

Lab2 - create slice from array 
      package main
      import "fmt"
      func main(){
      	primes := [6]int{2, 3, 5, 7, 11, 13}
      	fmt.Println(primes)
      //	primes[1] = 300
      	fmt.Printf("primes is of %T \n\n", primes)
      	fmt.Println("Length  = " , len(primes), " capacity = ", cap(primes))
      	
      	slice1 := primes[0:3]
      	fmt.Println("Slice1[0:3] Length  = " , len(slice1), " capacity = ", cap(slice1))
      	fmt.Println(slice1)
      	slice1[3]=444
      	slice2 := primes[5:6]
      	slice2[0]=5555
      	fmt.Println("Slice2[5:6] Length  = " , len(slice2), " capacity = ", cap(slice2))
      	fmt.Println(slice2)
      	fmt.Println(primes)
      	
      
      }
Lab1 - Array vs Slice 
      package main
        import "fmt"
        func main(){
        	primes := [6]int{2, 3, 5, 7, 11, 13}
        	fmt.Println(primes)
        	primes[1] = 300
        	fmt.Println(primes)
        	fmt.Printf("primes is of %T \n\n", primes)
        //	primes[9] = 4000
        	fmt.Println(len(primes))
        }
